[{"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\App.js":"1","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\MenuComponent.js":"2","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\dishes.js":"3","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\MainComponent.js":"4","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\DishdetailComponent.js":"5","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\index.js":"6","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\reportWebVitals.js":"7","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\ContactComponent.js":"10","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\HomeComponent.js":"11","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\configureStore.js":"14","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\CommentFormComponent.js":"15","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\comments.js":"16","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\dishes.js":"17","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\leaders.js":"18","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\promotions.js":"19","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\ActionTypes.js":"20","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\LoadingComponent.js":"21","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\forms.js":"22","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\comments.js":"23","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\ActionCreators.js":"24","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\baseUrl.js":"25"},{"size":526,"mtime":1612145471304,"results":"26","hashOfConfig":"27"},{"size":2038,"mtime":1612494145686,"results":"28","hashOfConfig":"27"},{"size":1490,"mtime":1611882029010,"results":"29","hashOfConfig":"27"},{"size":3981,"mtime":1612590424644,"results":"30","hashOfConfig":"27"},{"size":8361,"mtime":1612590604233,"results":"31","hashOfConfig":"27"},{"size":592,"mtime":1611832450964,"results":"32","hashOfConfig":"27"},{"size":362,"mtime":1611488383228,"results":"33","hashOfConfig":"27"},{"size":5665,"mtime":1612059023775,"results":"34","hashOfConfig":"27"},{"size":2639,"mtime":1611836985052,"results":"35","hashOfConfig":"27"},{"size":11113,"mtime":1612590422567,"results":"36","hashOfConfig":"27"},{"size":1868,"mtime":1612585846938,"results":"37","hashOfConfig":"27"},{"size":2382,"mtime":1611885861919,"results":"38","hashOfConfig":"27"},{"size":5505,"mtime":1612588393601,"results":"39","hashOfConfig":"27"},{"size":797,"mtime":1612439832720,"results":"40","hashOfConfig":"27"},{"size":4931,"mtime":1612163698262,"results":"41","hashOfConfig":"27"},{"size":756,"mtime":1612494145831,"results":"42","hashOfConfig":"27"},{"size":642,"mtime":1612494145687,"results":"43","hashOfConfig":"27"},{"size":650,"mtime":1612584780037,"results":"44","hashOfConfig":"27"},{"size":445,"mtime":1611882004292,"results":"45","hashOfConfig":"27"},{"size":557,"mtime":1612584779933,"results":"46","hashOfConfig":"27"},{"size":257,"mtime":1612405375847,"results":"47","hashOfConfig":"27"},{"size":169,"mtime":1612439884039,"results":"48","hashOfConfig":"27"},{"size":4279,"mtime":1611882015751,"results":"49","hashOfConfig":"27"},{"size":6767,"mtime":1612587545677,"results":"50","hashOfConfig":"27"},{"size":47,"mtime":1612494145691,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"sj7epz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\App.js",[],["108","109"],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\DishdetailComponent.js",["110","111","112"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength =  (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength =  (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props)  {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();        \r\n        this.props.postComment(this.props.dishId, values.rating, values.yourname, values.message);\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg mr-2\"></span>Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal} >Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" xs={12}>Rating</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\"  name=\"rating\"\r\n                                        defaultValue = {1}\r\n                                        className=\"form-control\" >                                        \r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                    </Control.select>                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" xs={12}>Last Name</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\"  name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be  greater than 2',\r\n                                            maxLength: 'Must be 15 charactersor less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Comment</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.textarea model=\".message\" id=\"message\"  name=\"message\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">                               \r\n                                <Col xs={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if(comments != null){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">  \r\n                <h3>Comments</h3>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                {<CommentForm dishId={dishId} postComment={postComment} />}\r\n            </div>\r\n        )       \r\n    }\r\n    else {\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in\r\n                transformProps={{\r\n                exitTransform:'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle><h3>{dish.name}</h3></CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dish != null) \r\n        return (  \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />                                                     \r\n                </div>\r\n            </div>\r\n        );\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }     \r\n}\r\n\r\n\r\n\r\nexport default DishDetail;",["113","114"],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\index.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\reportWebVitals.js",[],["115","116"],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\HeaderComponent.js",["117"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, \r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props)  {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this. toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"username: \"+ this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante  Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>    \r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the  World's best cuisines, and create a unique fusion experience. Our lipsmacking  creations will tickle your culinary senses!</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal} >Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                    innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" \r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>                               \r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\ContactComponent.js",["118","119","120","121","122","123","124","125"],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\leaders.js",[],["126","127"],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\CommentFormComponent.js",["128","129","130","131","132"],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\이현우\\Documents\\GitHub\\full-stack-react\\Front-End Web UI Frameworks and Tools\\Full-Stack-Web-Development-with-React\\React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":50,"column":37,"nodeType":"139","endLine":52,"endColumn":67},{"ruleId":"137","severity":1,"message":"140","line":64,"column":37,"nodeType":"139","endLine":70,"endColumn":44},{"ruleId":"137","severity":1,"message":"141","line":86,"column":37,"nodeType":"139","endLine":88,"endColumn":68},{"ruleId":"133","replacedBy":"142"},{"ruleId":"135","replacedBy":"143"},{"ruleId":"133","replacedBy":"144"},{"ruleId":"135","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":16,"column":28,"nodeType":"148","messageId":"149","endLine":16,"endColumn":45,"fix":"150"},{"ruleId":"151","severity":1,"message":"152","line":62,"column":29,"nodeType":"139","endLine":62,"endColumn":71},{"ruleId":"137","severity":1,"message":"140","line":76,"column":37,"nodeType":"139","endLine":82,"endColumn":44},{"ruleId":"137","severity":1,"message":"140","line":98,"column":37,"nodeType":"139","endLine":104,"endColumn":44},{"ruleId":"137","severity":1,"message":"140","line":120,"column":37,"nodeType":"139","endLine":126,"endColumn":40},{"ruleId":"137","severity":1,"message":"140","line":143,"column":37,"nodeType":"139","endLine":149,"endColumn":40},{"ruleId":"137","severity":1,"message":"153","line":165,"column":45,"nodeType":"139","endLine":167,"endColumn":52},{"ruleId":"137","severity":1,"message":"138","line":173,"column":37,"nodeType":"139","endLine":174,"endColumn":67},{"ruleId":"137","severity":1,"message":"141","line":183,"column":37,"nodeType":"139","endLine":185,"endColumn":68},{"ruleId":"133","replacedBy":"154"},{"ruleId":"135","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":8,"column":7,"nodeType":"158","messageId":"159","endLine":8,"endColumn":15},{"ruleId":"156","severity":1,"message":"160","line":9,"column":7,"nodeType":"158","messageId":"159","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":47,"column":37,"nodeType":"139","endLine":49,"endColumn":67},{"ruleId":"137","severity":1,"message":"140","line":61,"column":37,"nodeType":"139","endLine":67,"endColumn":44},{"ruleId":"137","severity":1,"message":"141","line":83,"column":37,"nodeType":"139","endLine":85,"endColumn":68},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["161"],["162"],["161"],["162"],"no-whitespace-before-property","Unexpected whitespace before property toggleModal.","MemberExpression","unexpectedWhitespace",{"range":"163","text":"164"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["161"],["162"],"no-unused-vars","'isNumber' is assigned a value but never used.","Identifier","unusedVar","'validEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[541,543],"."]